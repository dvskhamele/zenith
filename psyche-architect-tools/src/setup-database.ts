import { createClient } from '@supabase/supabase-js';

// Supabase connection details from docker-compose.yml
const SUPABASE_URL = 'http://localhost:8000'; // Kong gateway HTTP port
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYxNzY1NDQ0NCwiZXhwIjoxOTMzMDE0NDQ0fQ.0_J_0_J_0_J_0_J_0_J_0_J_0_J_0_J_0_J_0_J_0_J_0_J_0_J_0_J_0_J'; // Default anon key for local Supabase

const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

async function setupDatabase() {
  console.log('Attempting to set up Supabase database...');

  const createKeywordPatternsTable = `
    CREATE TABLE IF NOT EXISTS public.keyword_patterns (
        id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        pattern text,
        head_term text,
        status text DEFAULT 'Pending',
        priority integer DEFAULT 1,
        avg_conversion_rate double precision DEFAULT 0.0,
        published_url text,
        created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL
    );
  `;

  const createDataSourceTable = `
    CREATE TABLE IF NOT EXISTS public.data_source (
        id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        entity_name text,
        feature1 text,
        feature2 text,
        created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL
    );
  `;

  const createUGCSubmissionsTable = `
    CREATE TABLE IF NOT EXISTS public.ugc_submissions (
        id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        post_content text,
        hashtag text,
        author text,
        platform text,
        virality_score double precision DEFAULT 0.0,
        status text DEFAULT 'Pending',
        created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL
    );
  `;

  try {
    // Execute table creation queries
    // Note: This assumes a custom RPC function 'execute_sql' exists in Supabase
    // that allows executing arbitrary SQL. For a production environment, use migrations.
    await supabase.rpc('execute_sql', { sql: createKeywordPatternsTable });
    await supabase.rpc('execute_sql', { sql: createDataSourceTable });
    await supabase.rpc('execute_sql', { sql: createUGCSubmissionsTable });

    console.log('Supabase tables created successfully.');
  } catch (error: any) {
    console.error('Error setting up Supabase database:', error.message);
  }
}

setupDatabase();
