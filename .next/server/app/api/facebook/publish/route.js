"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/facebook/publish/route";
exports.ids = ["app/api/facebook/publish/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ffacebook%2Fpublish%2Froute&page=%2Fapi%2Ffacebook%2Fpublish%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffacebook%2Fpublish%2Froute.ts&appDir=%2FUsers%2Ftest%2Fstartups%2Fzenith%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ftest%2Fstartups%2Fzenith&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ffacebook%2Fpublish%2Froute&page=%2Fapi%2Ffacebook%2Fpublish%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffacebook%2Fpublish%2Froute.ts&appDir=%2FUsers%2Ftest%2Fstartups%2Fzenith%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ftest%2Fstartups%2Fzenith&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_test_startups_zenith_src_app_api_facebook_publish_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/facebook/publish/route.ts */ \"(rsc)/./src/app/api/facebook/publish/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/facebook/publish/route\",\n        pathname: \"/api/facebook/publish\",\n        filename: \"route\",\n        bundlePath: \"app/api/facebook/publish/route\"\n    },\n    resolvedPagePath: \"/Users/test/startups/zenith/src/app/api/facebook/publish/route.ts\",\n    nextConfigOutput,\n    userland: _Users_test_startups_zenith_src_app_api_facebook_publish_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/facebook/publish/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZmYWNlYm9vayUyRnB1Ymxpc2glMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmZhY2Vib29rJTJGcHVibGlzaCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmZhY2Vib29rJTJGcHVibGlzaCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnRlc3QlMkZzdGFydHVwcyUyRnplbml0aCUyRnNyYyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZ0ZXN0JTJGc3RhcnR1cHMlMkZ6ZW5pdGgmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ2lCO0FBQzlGO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vemVuaXRoLz8wNDRiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy90ZXN0L3N0YXJ0dXBzL3plbml0aC9zcmMvYXBwL2FwaS9mYWNlYm9vay9wdWJsaXNoL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9mYWNlYm9vay9wdWJsaXNoL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvZmFjZWJvb2svcHVibGlzaFwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvZmFjZWJvb2svcHVibGlzaC9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy90ZXN0L3N0YXJ0dXBzL3plbml0aC9zcmMvYXBwL2FwaS9mYWNlYm9vay9wdWJsaXNoL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9mYWNlYm9vay9wdWJsaXNoL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ffacebook%2Fpublish%2Froute&page=%2Fapi%2Ffacebook%2Fpublish%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffacebook%2Fpublish%2Froute.ts&appDir=%2FUsers%2Ftest%2Fstartups%2Fzenith%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ftest%2Fstartups%2Fzenith&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/facebook/publish/route.ts":
/*!***********************************************!*\
  !*** ./src/app/api/facebook/publish/route.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var _services_facebookService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/services/facebookService */ \"(rsc)/./src/services/facebookService.ts\");\n\nasync function POST(request) {\n    try {\n        // Parse the request body\n        const { content, pageId, token } = await request.json();\n        console.log(\"Facebook publish endpoint called with:\", {\n            content: content?.substring(0, 50) + \"...\",\n            pageId,\n            hasToken: !!token\n        });\n        if (!content) {\n            return new Response(JSON.stringify({\n                error: \"Content is required\"\n            }), {\n                status: 400,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n        // Publish to Facebook using the service, passing the token and pageId if provided\n        const result = await _services_facebookService__WEBPACK_IMPORTED_MODULE_0__.facebookService.publishPost(content, pageId, token);\n        console.log(\"Facebook publish successful:\", result);\n        return new Response(JSON.stringify(result), {\n            status: 200,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    } catch (error) {\n        console.error(\"Error publishing to Facebook:\", error);\n        return new Response(JSON.stringify({\n            error: error.message || \"Failed to publish to Facebook\",\n            details: error.message\n        }), {\n            status: 500,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9mYWNlYm9vay9wdWJsaXNoL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTZEO0FBRXRELGVBQWVDLEtBQUtDLE9BQWdCO0lBQ3pDLElBQUk7UUFDRix5QkFBeUI7UUFDekIsTUFBTSxFQUFFQyxPQUFPLEVBQUVDLE1BQU0sRUFBRUMsS0FBSyxFQUFFLEdBQUcsTUFBTUgsUUFBUUksSUFBSTtRQUVyREMsUUFBUUMsR0FBRyxDQUFDLDBDQUEwQztZQUFFTCxTQUFTQSxTQUFTTSxVQUFVLEdBQUcsTUFBTTtZQUFPTDtZQUFRTSxVQUFVLENBQUMsQ0FBQ0w7UUFBTTtRQUU5SCxJQUFJLENBQUNGLFNBQVM7WUFDWixPQUFPLElBQUlRLFNBQVNDLEtBQUtDLFNBQVMsQ0FBQztnQkFBRUMsT0FBTztZQUFzQixJQUFJO2dCQUNwRUMsUUFBUTtnQkFDUkMsU0FBUztvQkFBRSxnQkFBZ0I7Z0JBQW1CO1lBQ2hEO1FBQ0Y7UUFFQSxrRkFBa0Y7UUFDbEYsTUFBTUMsU0FBUyxNQUFNakIsc0VBQWVBLENBQUNrQixXQUFXLENBQUNmLFNBQVNDLFFBQVFDO1FBRWxFRSxRQUFRQyxHQUFHLENBQUMsZ0NBQWdDUztRQUU1QyxPQUFPLElBQUlOLFNBQVNDLEtBQUtDLFNBQVMsQ0FBQ0ksU0FBUztZQUMxQ0YsUUFBUTtZQUNSQyxTQUFTO2dCQUFFLGdCQUFnQjtZQUFtQjtRQUNoRDtJQUNGLEVBQUUsT0FBT0YsT0FBTztRQUNkUCxRQUFRTyxLQUFLLENBQUMsaUNBQWlDQTtRQUMvQyxPQUFPLElBQUlILFNBQVNDLEtBQUtDLFNBQVMsQ0FBQztZQUNqQ0MsT0FBT0EsTUFBTUssT0FBTyxJQUFJO1lBQ3hCQyxTQUFTTixNQUFNSyxPQUFPO1FBQ3hCLElBQUk7WUFDRkosUUFBUTtZQUNSQyxTQUFTO2dCQUFFLGdCQUFnQjtZQUFtQjtRQUNoRDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly96ZW5pdGgvLi9zcmMvYXBwL2FwaS9mYWNlYm9vay9wdWJsaXNoL3JvdXRlLnRzP2NiM2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZmFjZWJvb2tTZXJ2aWNlIH0gZnJvbSAnQC9zZXJ2aWNlcy9mYWNlYm9va1NlcnZpY2UnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXF1ZXN0OiBSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgLy8gUGFyc2UgdGhlIHJlcXVlc3QgYm9keVxuICAgIGNvbnN0IHsgY29udGVudCwgcGFnZUlkLCB0b2tlbiB9ID0gYXdhaXQgcmVxdWVzdC5qc29uKCk7XG4gICAgXG4gICAgY29uc29sZS5sb2coJ0ZhY2Vib29rIHB1Ymxpc2ggZW5kcG9pbnQgY2FsbGVkIHdpdGg6JywgeyBjb250ZW50OiBjb250ZW50Py5zdWJzdHJpbmcoMCwgNTApICsgJy4uLicsIHBhZ2VJZCwgaGFzVG9rZW46ICEhdG9rZW4gfSk7XG4gICAgXG4gICAgaWYgKCFjb250ZW50KSB7XG4gICAgICByZXR1cm4gbmV3IFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KHsgZXJyb3I6ICdDb250ZW50IGlzIHJlcXVpcmVkJyB9KSwge1xuICAgICAgICBzdGF0dXM6IDQwMCxcbiAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgICBcbiAgICAvLyBQdWJsaXNoIHRvIEZhY2Vib29rIHVzaW5nIHRoZSBzZXJ2aWNlLCBwYXNzaW5nIHRoZSB0b2tlbiBhbmQgcGFnZUlkIGlmIHByb3ZpZGVkXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZmFjZWJvb2tTZXJ2aWNlLnB1Ymxpc2hQb3N0KGNvbnRlbnQsIHBhZ2VJZCwgdG9rZW4pO1xuICAgIFxuICAgIGNvbnNvbGUubG9nKCdGYWNlYm9vayBwdWJsaXNoIHN1Y2Nlc3NmdWw6JywgcmVzdWx0KTtcbiAgICBcbiAgICByZXR1cm4gbmV3IFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KHJlc3VsdCksIHtcbiAgICAgIHN0YXR1czogMjAwLFxuICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH1cbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBwdWJsaXNoaW5nIHRvIEZhY2Vib29rOicsIGVycm9yKTtcbiAgICByZXR1cm4gbmV3IFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KHsgXG4gICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSB8fCAnRmFpbGVkIHRvIHB1Ymxpc2ggdG8gRmFjZWJvb2snLFxuICAgICAgZGV0YWlsczogZXJyb3IubWVzc2FnZVxuICAgIH0pLCB7XG4gICAgICBzdGF0dXM6IDUwMCxcbiAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9XG4gICAgfSk7XG4gIH1cbn0iXSwibmFtZXMiOlsiZmFjZWJvb2tTZXJ2aWNlIiwiUE9TVCIsInJlcXVlc3QiLCJjb250ZW50IiwicGFnZUlkIiwidG9rZW4iLCJqc29uIiwiY29uc29sZSIsImxvZyIsInN1YnN0cmluZyIsImhhc1Rva2VuIiwiUmVzcG9uc2UiLCJKU09OIiwic3RyaW5naWZ5IiwiZXJyb3IiLCJzdGF0dXMiLCJoZWFkZXJzIiwicmVzdWx0IiwicHVibGlzaFBvc3QiLCJtZXNzYWdlIiwiZGV0YWlscyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/facebook/publish/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabaseClient.ts":
/*!***********************************!*\
  !*** ./src/lib/supabaseClient.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://qfpvsyhtijwxkmyrqswa.supabase.co\" || 0;\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0\" || 0;\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3N1cGFiYXNlQ2xpZW50LnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9EO0FBRXBELE1BQU1DLGNBQWNDLDBDQUFvQyxJQUFJO0FBQzVELE1BQU1HLGtCQUFrQkgsMkpBQXlDLElBQUk7QUFFOUQsTUFBTUssV0FBV1AsbUVBQVlBLENBQUNDLGFBQWFJLGlCQUFnQiIsInNvdXJjZXMiOlsid2VicGFjazovL3plbml0aC8uL3NyYy9saWIvc3VwYWJhc2VDbGllbnQudHM/ZjlkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnXG5cbmNvbnN0IHN1cGFiYXNlVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIHx8ICdodHRwczovL3FmcHZzeWh0aWp3eGtteXJxc3dhLnN1cGFiYXNlLmNvJ1xuY29uc3Qgc3VwYWJhc2VBbm9uS2V5ID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkgfHwgJ2V5SmhiR2NpT2lKSVV6STFOaUlzSW5SNWNDSTZJa3BYVkNKOS5leUpwYzNNaU9pSnpkWEJoWW1GelpTMWtaVzF2SWl3aWNtOXNaU0k2SW1GdWIyNGlMQ0psZUhBaU9qRTVPRE00TVRJNU9UWjkuQ1JYUDFBN1dPZW9KZVh4ak5uaTQza2RRd2duV05SZWlsRE1ibFlUbl9JMCdcblxuZXhwb3J0IGNvbnN0IHN1cGFiYXNlID0gY3JlYXRlQ2xpZW50KHN1cGFiYXNlVXJsLCBzdXBhYmFzZUFub25LZXkpIl0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsInN1cGFiYXNlVXJsIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCIsInN1cGFiYXNlQW5vbktleSIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIiwic3VwYWJhc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabaseClient.ts\n");

/***/ }),

/***/ "(rsc)/./src/services/facebookService.ts":
/*!*****************************************!*\
  !*** ./src/services/facebookService.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   facebookService: () => (/* binding */ facebookService),\n/* harmony export */   getFacebookPages: () => (/* binding */ getFacebookPages),\n/* harmony export */   getFacebookProfile: () => (/* binding */ getFacebookProfile),\n/* harmony export */   getFacebookToken: () => (/* binding */ getFacebookToken),\n/* harmony export */   publishToFacebook: () => (/* binding */ publishToFacebook),\n/* harmony export */   testFacebookConnection: () => (/* binding */ testFacebookConnection)\n/* harmony export */ });\n/* harmony import */ var _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/supabaseClient */ \"(rsc)/./src/lib/supabaseClient.ts\");\n// Facebook Integration Service\n// This service provides a unified interface for all Facebook operations\n\nclass FacebookService {\n    // Get Facebook access token from session or localStorage with better error handling\n    async getAccessToken(overrideToken) {\n        try {\n            console.log(\"=== GET ACCESS TOKEN START ===\");\n            // If an override token is provided (e.g., from server-side API), use it\n            if (overrideToken) {\n                console.log(\"Using override token, length:\", overrideToken.length);\n                // Validate the token before returning\n                const validation = await this.validateToken(overrideToken);\n                if (validation.valid) {\n                    console.log(\"Override token validated successfully\");\n                    return overrideToken;\n                } else {\n                    console.log(\"Override token is invalid:\", validation.error);\n                    throw new Error(`Invalid override token: ${validation.error}`);\n                }\n            }\n            // Try to get from localStorage first (most reliable for client-side)\n            if (false) {}\n            // Get the current user's session\n            const { data: { session }, error: sessionError } = await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_0__.supabase.auth.getSession();\n            if (sessionError) {\n                console.error(\"Session error:\", sessionError);\n            // Don't throw error, try localStorage fallback\n            }\n            if (!session) {\n                console.log(\"No active Supabase session\");\n            } else {\n                console.log(\"Supabase session found\");\n                // Get the provider token (Facebook access token)\n                const facebookAccessToken = session.provider_token;\n                if (facebookAccessToken) {\n                    console.log(\"Token found in Supabase session, length:\", facebookAccessToken.length);\n                    // Validate the token before returning\n                    const validation = await this.validateToken(facebookAccessToken);\n                    if (validation.valid) {\n                        console.log(\"Session token validated successfully\");\n                        return facebookAccessToken;\n                    } else {\n                        console.log(\"Session token is invalid:\", validation.error);\n                    }\n                }\n            }\n            // Last resort: check localStorage again\n            if (false) {}\n            console.log(\"No Facebook access token found anywhere\");\n            return null;\n        } catch (error) {\n            console.error(\"Error getting Facebook access token:\", error);\n            // Try absolute fallback\n            try {\n                if (false) {}\n            } catch (fallbackError) {\n                console.error(\"Absolute fallback failed:\", fallbackError);\n            }\n            return null;\n        }\n    }\n    // Validate Facebook access token with detailed information\n    async validateToken(token) {\n        try {\n            // First, check basic token validity\n            const response = await fetch(`${this.baseUrl}/me?access_token=${token}&fields=id,name,email`);\n            if (!response.ok) {\n                const errorData = await response.json();\n                return {\n                    valid: false,\n                    error: errorData.error?.message || \"Token invalid\"\n                };\n            }\n            // If basic validation passes, check permissions\n            try {\n                // Check what permissions the token has\n                // Note: For debug_token, we need to use the app access token, but for simplicity,\n                // we'll skip this for now and just return valid\n                console.log(\"Token validation passed, skipping detailed permission check for now\");\n            } catch (debugError) {\n                console.log(\"Could not check token permissions:\", debugError);\n            // Still return valid since basic validation passed\n            }\n            return {\n                valid: true\n            };\n        } catch (error) {\n            console.error(\"Error validating Facebook token:\", error);\n            return {\n                valid: false,\n                error: error.message || \"Token validation failed\"\n            };\n        }\n    }\n    // Get user's Facebook pages with enhanced error handling and fallbacks\n    async getPages() {\n        try {\n            console.log(\"=== GET PAGES METHOD START ===\");\n            // Try to get token from session first\n            let token = null;\n            try {\n                token = await this.getAccessToken();\n                console.log(\"Token from getAccessToken():\", token ? \"Found\" : \"Not found\");\n            } catch (sessionError) {\n                console.log(\"Session token retrieval failed:\", sessionError.message);\n            }\n            // Fallback to direct localStorage access\n            if (!token) {\n                console.log(\"Trying direct localStorage access...\");\n                if (false) {}\n            }\n            if (!token) {\n                throw new Error(\"No Facebook access token available from session or localStorage\");\n            }\n            console.log(\"Using token for pages request\");\n            // Validate token first\n            const validation = await this.validateToken(token);\n            console.log(\"Token validity check:\", validation);\n            if (!validation.valid) {\n                throw new Error(`Facebook access token is invalid or expired: ${validation.error}`);\n            }\n            // Check if token has required permissions\n            if (validation.permissions) {\n                const requiredPermissions = [\n                    \"pages_show_list\",\n                    \"pages_read_engagement\",\n                    \"pages_manage_posts\"\n                ];\n                const missingPermissions = requiredPermissions.filter((perm)=>!validation.permissions.includes(perm));\n                if (missingPermissions.length > 0) {\n                    console.log(\"Warning: Token missing required permissions:\", missingPermissions);\n                } else {\n                    console.log(\"Token has all required permissions\");\n                }\n            }\n            // Get user profile to confirm token works\n            try {\n                const userResponse = await fetch(`${this.baseUrl}/me?access_token=${token}&fields=id,name,email`);\n                const userData = await userResponse.json();\n                if (!userResponse.ok) {\n                    console.error(\"User profile API error:\", userData);\n                    throw new Error(userData.error?.message || \"Failed to fetch user profile\");\n                }\n                console.log(\"User profile retrieved:\", userData.name);\n            } catch (userError) {\n                console.error(\"Error fetching user profile:\", userError);\n            // Continue anyway as we might still get pages\n            }\n            // Get pages using the token\n            console.log(\"Fetching Facebook pages with token...\");\n            const response = await fetch(`${this.baseUrl}/me/accounts?access_token=${token}&fields=name,id,category,picture,fan_count`);\n            const data = await response.json();\n            console.log(\"Pages API response:\", data);\n            if (!response.ok) {\n                console.error(\"Facebook pages API error:\", data);\n                throw new Error(data.error?.message || \"Failed to fetch Facebook pages\");\n            }\n            // Additional debugging - check if we have an empty data array\n            if (data && data.data && Array.isArray(data.data)) {\n                console.log(\"Pages retrieved successfully:\", data.data.length);\n                if (data.data.length === 0) {\n                    console.log(\"Warning: No pages found. This might be due to:\");\n                    console.log(\"1. User has no Facebook pages\");\n                    console.log(\"2. Token lacks pages_show_list permission\");\n                    console.log(\"3. User account is not a business account with page access\");\n                }\n                return data.data;\n            } else {\n                console.log(\"Unexpected response format:\", data);\n                return [];\n            }\n        } catch (error) {\n            console.error(\"Error fetching Facebook pages:\", error);\n            throw error;\n        }\n    }\n    // Get user's Facebook profile\n    async getProfile() {\n        try {\n            const token = await this.getAccessToken();\n            if (!token) {\n                throw new Error(\"No Facebook access token available\");\n            }\n            const response = await fetch(`${this.baseUrl}/me?access_token=${token}&fields=id,name,email,picture`);\n            const data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.error?.message || \"Failed to fetch Facebook profile\");\n            }\n            return data;\n        } catch (error) {\n            console.error(\"Error fetching Facebook profile:\", error);\n            throw error;\n        }\n    }\n    // Upload image to Facebook\n    async uploadImage(base64Image, caption = \"\", pageId, overrideToken) {\n        try {\n            const token = await this.getAccessToken(overrideToken);\n            if (!token) {\n                throw new Error(\"No Facebook access token available. Please reconnect your Facebook account.\");\n            }\n            let accessTokenToUse = token;\n            let url = `${this.baseUrl}/me/photos`;\n            // If a page ID is provided, get the page access token\n            if (pageId) {\n                console.log(\"Fetching page access token for page ID:\", pageId);\n                const pageTokenResponse = await fetch(`${this.baseUrl}/${pageId}?fields=access_token&access_token=${token}`);\n                const pageTokenData = await pageTokenResponse.json();\n                if (!pageTokenResponse.ok) {\n                    console.error(\"Error fetching page access token:\", pageTokenData);\n                    const errorMessage = pageTokenData.error?.message || \"Failed to get page access token\";\n                    throw new Error(`Failed to get page access token: ${errorMessage}`);\n                }\n                accessTokenToUse = pageTokenData.access_token;\n                url = `${this.baseUrl}/${pageId}/photos`;\n                console.log(\"Using page access token for image upload\");\n            } else {\n                console.log(\"Using user access token for image upload to personal feed\");\n            }\n            // For Facebook photo upload, we need to send as form data\n            // First, convert base64 to buffer for server-side usage\n            const imageBuffer = Buffer.from(base64Image, \"base64\");\n            const formData = new FormData();\n            formData.append(\"source\", new Blob([\n                imageBuffer\n            ], {\n                type: \"image/png\"\n            }));\n            if (caption) {\n                formData.append(\"caption\", caption);\n            }\n            formData.append(\"access_token\", accessTokenToUse);\n            console.log(\"Uploading image to Facebook:\", {\n                url,\n                hasCaption: !!caption\n            });\n            // Upload to Facebook\n            const response = await fetch(url, {\n                method: \"POST\",\n                body: formData\n            });\n            const responseData = await response.json();\n            if (!response.ok) {\n                let errorMessage = \"Failed to upload image to Facebook\";\n                if (responseData && responseData.error) {\n                    errorMessage = responseData.error.message || responseData.error.type || errorMessage;\n                    // Log additional error details for debugging\n                    console.error(\"Facebook API error details:\", {\n                        type: responseData.error.type,\n                        code: responseData.error.code,\n                        fbtrace_id: responseData.error.fbtrace_id,\n                        message: responseData.error.message\n                    });\n                }\n                throw new Error(`Facebook API error: ${errorMessage}`);\n            }\n            console.log(\"Image uploaded to Facebook successfully:\", responseData);\n            return {\n                success: true,\n                data: responseData,\n                facebook_post_id: responseData.post_id\n            };\n        } catch (error) {\n            console.error(\"Error uploading image to Facebook:\", error);\n            // Re-throw with more user-friendly message\n            if (error instanceof Error) {\n                throw new Error(`Image upload failed: ${error.message}`);\n            }\n            throw new Error(\"Image upload failed: Unknown error occurred\");\n        }\n    }\n    // Publish post to Facebook (user feed or page)\n    async publishPost(content, pageId, overrideToken) {\n        try {\n            const token = await this.getAccessToken(overrideToken);\n            if (!token) {\n                throw new Error(\"No Facebook access token available. Please reconnect your Facebook account.\");\n            }\n            // Validate the token before attempting to publish\n            const validation = await this.validateToken(token);\n            if (!validation.valid) {\n                throw new Error(`Facebook access token is invalid: ${validation.error || \"Unknown error\"}. Please reconnect your Facebook account.`);\n            }\n            let accessTokenToUse = token;\n            let url = `${this.baseUrl}/me/feed`;\n            // If a page ID is provided, get the page access token\n            if (pageId) {\n                console.log(\"Fetching page access token for page ID:\", pageId);\n                const pageTokenResponse = await fetch(`${this.baseUrl}/${pageId}?fields=access_token&access_token=${token}`);\n                const pageTokenData = await pageTokenResponse.json();\n                if (!pageTokenResponse.ok) {\n                    console.error(\"Error fetching page access token:\", pageTokenData);\n                    const errorMessage = pageTokenData.error?.message || \"Failed to get page access token\";\n                    throw new Error(`Failed to get page access token: ${errorMessage}`);\n                }\n                accessTokenToUse = pageTokenData.access_token;\n                url = `${this.baseUrl}/${pageId}/feed`;\n                console.log(\"Using page access token for publishing\");\n            } else {\n                console.log(\"Using user access token for publishing to personal feed\");\n            }\n            // Prepare the post data\n            const postData = {\n                message: content,\n                access_token: accessTokenToUse\n            };\n            console.log(\"Publishing to Facebook:\", {\n                url,\n                hasMessage: !!postData.message\n            });\n            // Publish to Facebook\n            const response = await fetch(url, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(postData)\n            });\n            const responseData = await response.json();\n            if (!response.ok) {\n                let errorMessage = \"Failed to publish to Facebook\";\n                if (responseData && responseData.error) {\n                    errorMessage = responseData.error.message || responseData.error.type || errorMessage;\n                    // Log additional error details for debugging\n                    console.error(\"Facebook API error details:\", {\n                        type: responseData.error.type,\n                        code: responseData.error.code,\n                        fbtrace_id: responseData.error.fbtrace_id,\n                        message: responseData.error.message\n                    });\n                }\n                throw new Error(`Facebook API error: ${errorMessage}`);\n            }\n            console.log(\"Post published to Facebook successfully:\", responseData);\n            return {\n                success: true,\n                data: responseData,\n                facebook_post_id: responseData.id\n            };\n        } catch (error) {\n            console.error(\"Error publishing to Facebook:\", error);\n            // Re-throw with more user-friendly message\n            if (error instanceof Error) {\n                throw new Error(`Publish failed: ${error.message}`);\n            }\n            throw new Error(\"Publish failed: Unknown error occurred\");\n        }\n    }\n    // Test Facebook connection\n    async testConnection() {\n        try {\n            const token = await this.getAccessToken();\n            if (!token) {\n                return {\n                    connected: false\n                };\n            }\n            // Validate token\n            const validation = await this.validateToken(token);\n            if (!validation.valid) {\n                return {\n                    connected: false\n                };\n            }\n            // Get user profile\n            const profile = await this.getProfile();\n            // Get pages\n            const pages = await this.getPages();\n            return {\n                connected: true,\n                user: profile,\n                pages: pages,\n                tokenInfo: validation\n            };\n        } catch (error) {\n            console.error(\"Error testing Facebook connection:\", error);\n            return {\n                connected: false\n            };\n        }\n    }\n    constructor(){\n        this.baseUrl = \"https://graph.facebook.com/v19.0\";\n    }\n}\n// Export singleton instance\nconst facebookService = new FacebookService();\n// Export individual functions for direct use\nconst getFacebookToken = ()=>facebookService.getAccessToken();\nconst getFacebookPages = ()=>facebookService.getPages();\nconst getFacebookProfile = ()=>facebookService.getProfile();\nconst publishToFacebook = (content, pageId)=>facebookService.publishPost(content, pageId);\nconst testFacebookConnection = ()=>facebookService.testConnection();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/services/facebookService.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/@opentelemetry","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ffacebook%2Fpublish%2Froute&page=%2Fapi%2Ffacebook%2Fpublish%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffacebook%2Fpublish%2Froute.ts&appDir=%2FUsers%2Ftest%2Fstartups%2Fzenith%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Ftest%2Fstartups%2Fzenith&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();