"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_src_components_FacebookPostWidget_tsx"],{

/***/ "(app-pages-browser)/./src/components/FacebookPostWidget.tsx":
/*!***********************************************!*\
  !*** ./src/components/FacebookPostWidget.tsx ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ FacebookPostWidget; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _services_facebookService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/services/facebookService */ \"(app-pages-browser)/./src/services/facebookService.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction FacebookPostWidget() {\n    _s();\n    const [content, setContent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [posting, setPosting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [result, setResult] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const publishToFacebook = async ()=>{\n        if (!content.trim()) {\n            setResult({\n                error: \"Please enter some content to publish\"\n            });\n            return;\n        }\n        setPosting(true);\n        setResult(null);\n        try {\n            console.log(\"Publishing to Facebook...\");\n            // Get token from localStorage\n            const token =  true ? localStorage.getItem(\"facebook_access_token\") : 0;\n            // Publish to Facebook using the service\n            const response = await _services_facebookService__WEBPACK_IMPORTED_MODULE_2__.facebookService.publishPost(content, undefined, token);\n            console.log(\"Published successfully:\", response);\n            setResult({\n                success: \"Post published to Facebook successfully!\"\n            });\n            setContent(\"\");\n        } catch (error) {\n            console.error(\"Error publishing to Facebook:\", error);\n            setResult({\n                error: error.message || \"Failed to publish to Facebook. Please try again.\"\n            });\n        } finally{\n            setPosting(false);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"bg-slate-800 rounded-xl p-6 border border-slate-700\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                className: \"text-lg font-semibold text-white mb-4\",\n                children: \"Post to Facebook\"\n            }, void 0, false, {\n                fileName: \"/Users/test/startups/zenith/src/components/FacebookPostWidget.tsx\",\n                lineNumber: 42,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mb-4\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                    value: content,\n                    onChange: (e)=>setContent(e.target.value),\n                    placeholder: \"What's on your mind?\",\n                    className: \"w-full p-3 rounded-lg bg-slate-700 border border-slate-600 text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n                    rows: 4\n                }, void 0, false, {\n                    fileName: \"/Users/test/startups/zenith/src/components/FacebookPostWidget.tsx\",\n                    lineNumber: 45,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/test/startups/zenith/src/components/FacebookPostWidget.tsx\",\n                lineNumber: 44,\n                columnNumber: 7\n            }, this),\n            result && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mb-4 p-3 rounded-lg \".concat(result.success ? \"bg-green-500/20 text-green-300\" : \"bg-red-500/20 text-red-300\"),\n                children: result.success || result.error\n            }, void 0, false, {\n                fileName: \"/Users/test/startups/zenith/src/components/FacebookPostWidget.tsx\",\n                lineNumber: 55,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: publishToFacebook,\n                disabled: posting || !content.trim(),\n                className: \"w-full bg-blue-600 text-white font-semibold px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center\",\n                children: posting ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                            className: \"animate-spin -ml-1 mr-2 h-4 w-4 text-white\",\n                            xmlns: \"http://www.w3.org/2000/svg\",\n                            fill: \"none\",\n                            viewBox: \"0 0 24 24\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                                    className: \"opacity-25\",\n                                    cx: \"12\",\n                                    cy: \"12\",\n                                    r: \"10\",\n                                    stroke: \"currentColor\",\n                                    strokeWidth: \"4\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/test/startups/zenith/src/components/FacebookPostWidget.tsx\",\n                                    lineNumber: 72,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                    className: \"opacity-75\",\n                                    fill: \"currentColor\",\n                                    d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/test/startups/zenith/src/components/FacebookPostWidget.tsx\",\n                                    lineNumber: 73,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/test/startups/zenith/src/components/FacebookPostWidget.tsx\",\n                            lineNumber: 71,\n                            columnNumber: 13\n                        }, this),\n                        \"Posting to Facebook...\"\n                    ]\n                }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                            className: \"w-4 h-4 mr-2\",\n                            fill: \"currentColor\",\n                            viewBox: \"0 0 24 24\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                d: \"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"\n                            }, void 0, false, {\n                                fileName: \"/Users/test/startups/zenith/src/components/FacebookPostWidget.tsx\",\n                                lineNumber: 80,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/test/startups/zenith/src/components/FacebookPostWidget.tsx\",\n                            lineNumber: 79,\n                            columnNumber: 13\n                        }, this),\n                        \"Post to Facebook\"\n                    ]\n                }, void 0, true)\n            }, void 0, false, {\n                fileName: \"/Users/test/startups/zenith/src/components/FacebookPostWidget.tsx\",\n                lineNumber: 64,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/test/startups/zenith/src/components/FacebookPostWidget.tsx\",\n        lineNumber: 41,\n        columnNumber: 5\n    }, this);\n}\n_s(FacebookPostWidget, \"4eYZ+4U9knB3jVqpbFWjrflM7Y4=\");\n_c = FacebookPostWidget;\nvar _c;\n$RefreshReg$(_c, \"FacebookPostWidget\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0ZhY2Vib29rUG9zdFdpZGdldC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUVpQztBQUM0QjtBQUU5QyxTQUFTRTs7SUFDdEIsTUFBTSxDQUFDQyxTQUFTQyxXQUFXLEdBQUdKLCtDQUFRQSxDQUFDO0lBQ3ZDLE1BQU0sQ0FBQ0ssU0FBU0MsV0FBVyxHQUFHTiwrQ0FBUUEsQ0FBQztJQUN2QyxNQUFNLENBQUNPLFFBQVFDLFVBQVUsR0FBR1IsK0NBQVFBLENBQTRDO0lBRWhGLE1BQU1TLG9CQUFvQjtRQUN4QixJQUFJLENBQUNOLFFBQVFPLElBQUksSUFBSTtZQUNuQkYsVUFBVTtnQkFBRUcsT0FBTztZQUF1QztZQUMxRDtRQUNGO1FBRUFMLFdBQVc7UUFDWEUsVUFBVTtRQUVWLElBQUk7WUFDRkksUUFBUUMsR0FBRyxDQUFDO1lBRVosOEJBQThCO1lBQzlCLE1BQU1DLFFBQVEsS0FBa0IsR0FBY0MsYUFBYUMsT0FBTyxDQUFDLDJCQUEyQixDQUFJO1lBRWxHLHdDQUF3QztZQUN4QyxNQUFNQyxXQUFXLE1BQU1oQixzRUFBZUEsQ0FBQ2lCLFdBQVcsQ0FBQ2YsU0FBU2dCLFdBQVdMO1lBRXZFRixRQUFRQyxHQUFHLENBQUMsMkJBQTJCSTtZQUN2Q1QsVUFBVTtnQkFBRVksU0FBUztZQUEyQztZQUNoRWhCLFdBQVc7UUFDYixFQUFFLE9BQU9PLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLGlDQUFpQ0E7WUFDL0NILFVBQVU7Z0JBQUVHLE9BQU9BLE1BQU1VLE9BQU8sSUFBSTtZQUFtRDtRQUN6RixTQUFVO1lBQ1JmLFdBQVc7UUFDYjtJQUNGO0lBRUEscUJBQ0UsOERBQUNnQjtRQUFJQyxXQUFVOzswQkFDYiw4REFBQ0M7Z0JBQUdELFdBQVU7MEJBQXdDOzs7Ozs7MEJBRXRELDhEQUFDRDtnQkFBSUMsV0FBVTswQkFDYiw0RUFBQ0U7b0JBQ0NDLE9BQU92QjtvQkFDUHdCLFVBQVUsQ0FBQ0MsSUFBTXhCLFdBQVd3QixFQUFFQyxNQUFNLENBQUNILEtBQUs7b0JBQzFDSSxhQUFZO29CQUNaUCxXQUFVO29CQUNWUSxNQUFNOzs7Ozs7Ozs7OztZQUlUeEIsd0JBQ0MsOERBQUNlO2dCQUFJQyxXQUFXLHVCQUlmLE9BSENoQixPQUFPYSxPQUFPLEdBQ1YsbUNBQ0E7MEJBRUhiLE9BQU9hLE9BQU8sSUFBSWIsT0FBT0ksS0FBSzs7Ozs7OzBCQUluQyw4REFBQ3FCO2dCQUNDQyxTQUFTeEI7Z0JBQ1R5QixVQUFVN0IsV0FBVyxDQUFDRixRQUFRTyxJQUFJO2dCQUNsQ2EsV0FBVTswQkFFVGxCLHdCQUNDOztzQ0FDRSw4REFBQzhCOzRCQUFJWixXQUFVOzRCQUE2Q2EsT0FBTTs0QkFBNkJDLE1BQUs7NEJBQU9DLFNBQVE7OzhDQUNqSCw4REFBQ0M7b0NBQU9oQixXQUFVO29DQUFhaUIsSUFBRztvQ0FBS0MsSUFBRztvQ0FBS0MsR0FBRTtvQ0FBS0MsUUFBTztvQ0FBZUMsYUFBWTs7Ozs7OzhDQUN4Riw4REFBQ0M7b0NBQUt0QixXQUFVO29DQUFhYyxNQUFLO29DQUFlUyxHQUFFOzs7Ozs7Ozs7Ozs7d0JBQy9DOztpREFJUjs7c0NBQ0UsOERBQUNYOzRCQUFJWixXQUFVOzRCQUFlYyxNQUFLOzRCQUFlQyxTQUFRO3NDQUN4RCw0RUFBQ087Z0NBQUtDLEdBQUU7Ozs7Ozs7Ozs7O3dCQUNKOzs7Ozs7Ozs7Ozs7OztBQU9sQjtHQWxGd0I1QztLQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9GYWNlYm9va1Bvc3RXaWRnZXQudHN4PzQzMjIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGZhY2Vib29rU2VydmljZSB9IGZyb20gJ0Avc2VydmljZXMvZmFjZWJvb2tTZXJ2aWNlJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRmFjZWJvb2tQb3N0V2lkZ2V0KCkge1xuICBjb25zdCBbY29udGVudCwgc2V0Q29udGVudF0gPSB1c2VTdGF0ZSgnJyk7XG4gIGNvbnN0IFtwb3N0aW5nLCBzZXRQb3N0aW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW3Jlc3VsdCwgc2V0UmVzdWx0XSA9IHVzZVN0YXRlPHtzdWNjZXNzPzogc3RyaW5nOyBlcnJvcj86IHN0cmluZ30gfCBudWxsPihudWxsKTtcblxuICBjb25zdCBwdWJsaXNoVG9GYWNlYm9vayA9IGFzeW5jICgpID0+IHtcbiAgICBpZiAoIWNvbnRlbnQudHJpbSgpKSB7XG4gICAgICBzZXRSZXN1bHQoeyBlcnJvcjogJ1BsZWFzZSBlbnRlciBzb21lIGNvbnRlbnQgdG8gcHVibGlzaCcgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgc2V0UG9zdGluZyh0cnVlKTtcbiAgICBzZXRSZXN1bHQobnVsbCk7XG5cbiAgICB0cnkge1xuICAgICAgY29uc29sZS5sb2coJ1B1Ymxpc2hpbmcgdG8gRmFjZWJvb2suLi4nKTtcbiAgICAgIFxuICAgICAgLy8gR2V0IHRva2VuIGZyb20gbG9jYWxTdG9yYWdlXG4gICAgICBjb25zdCB0b2tlbiA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2ZhY2Vib29rX2FjY2Vzc190b2tlbicpIDogbnVsbDtcbiAgICAgIFxuICAgICAgLy8gUHVibGlzaCB0byBGYWNlYm9vayB1c2luZyB0aGUgc2VydmljZVxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmYWNlYm9va1NlcnZpY2UucHVibGlzaFBvc3QoY29udGVudCwgdW5kZWZpbmVkLCB0b2tlbik7XG4gICAgICBcbiAgICAgIGNvbnNvbGUubG9nKCdQdWJsaXNoZWQgc3VjY2Vzc2Z1bGx5OicsIHJlc3BvbnNlKTtcbiAgICAgIHNldFJlc3VsdCh7IHN1Y2Nlc3M6ICdQb3N0IHB1Ymxpc2hlZCB0byBGYWNlYm9vayBzdWNjZXNzZnVsbHkhJyB9KTtcbiAgICAgIHNldENvbnRlbnQoJycpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBwdWJsaXNoaW5nIHRvIEZhY2Vib29rOicsIGVycm9yKTtcbiAgICAgIHNldFJlc3VsdCh7IGVycm9yOiBlcnJvci5tZXNzYWdlIHx8ICdGYWlsZWQgdG8gcHVibGlzaCB0byBGYWNlYm9vay4gUGxlYXNlIHRyeSBhZ2Fpbi4nIH0pO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBzZXRQb3N0aW5nKGZhbHNlKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImJnLXNsYXRlLTgwMCByb3VuZGVkLXhsIHAtNiBib3JkZXIgYm9yZGVyLXNsYXRlLTcwMFwiPlxuICAgICAgPGgzIGNsYXNzTmFtZT1cInRleHQtbGcgZm9udC1zZW1pYm9sZCB0ZXh0LXdoaXRlIG1iLTRcIj5Qb3N0IHRvIEZhY2Vib29rPC9oMz5cbiAgICAgIFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYi00XCI+XG4gICAgICAgIDx0ZXh0YXJlYVxuICAgICAgICAgIHZhbHVlPXtjb250ZW50fVxuICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0Q29udGVudChlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgcGxhY2Vob2xkZXI9XCJXaGF0J3Mgb24geW91ciBtaW5kP1wiXG4gICAgICAgICAgY2xhc3NOYW1lPVwidy1mdWxsIHAtMyByb3VuZGVkLWxnIGJnLXNsYXRlLTcwMCBib3JkZXIgYm9yZGVyLXNsYXRlLTYwMCB0ZXh0LXdoaXRlIHBsYWNlaG9sZGVyLXNsYXRlLTQwMCBmb2N1czpvdXRsaW5lLW5vbmUgZm9jdXM6cmluZy0yIGZvY3VzOnJpbmctYmx1ZS01MDBcIlxuICAgICAgICAgIHJvd3M9ezR9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIFxuICAgICAge3Jlc3VsdCAmJiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgbWItNCBwLTMgcm91bmRlZC1sZyAke1xuICAgICAgICAgIHJlc3VsdC5zdWNjZXNzIFxuICAgICAgICAgICAgPyAnYmctZ3JlZW4tNTAwLzIwIHRleHQtZ3JlZW4tMzAwJyBcbiAgICAgICAgICAgIDogJ2JnLXJlZC01MDAvMjAgdGV4dC1yZWQtMzAwJ1xuICAgICAgICB9YH0+XG4gICAgICAgICAge3Jlc3VsdC5zdWNjZXNzIHx8IHJlc3VsdC5lcnJvcn1cbiAgICAgICAgPC9kaXY+XG4gICAgICApfVxuICAgICAgXG4gICAgICA8YnV0dG9uXG4gICAgICAgIG9uQ2xpY2s9e3B1Ymxpc2hUb0ZhY2Vib29rfVxuICAgICAgICBkaXNhYmxlZD17cG9zdGluZyB8fCAhY29udGVudC50cmltKCl9XG4gICAgICAgIGNsYXNzTmFtZT1cInctZnVsbCBiZy1ibHVlLTYwMCB0ZXh0LXdoaXRlIGZvbnQtc2VtaWJvbGQgcHgtNCBweS0yIHJvdW5kZWQtbGcgaG92ZXI6YmctYmx1ZS03MDAgZGlzYWJsZWQ6b3BhY2l0eS01MCBkaXNhYmxlZDpjdXJzb3Itbm90LWFsbG93ZWQgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXJcIlxuICAgICAgPlxuICAgICAgICB7cG9zdGluZyA/IChcbiAgICAgICAgICA8PlxuICAgICAgICAgICAgPHN2ZyBjbGFzc05hbWU9XCJhbmltYXRlLXNwaW4gLW1sLTEgbXItMiBoLTQgdy00IHRleHQtd2hpdGVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgZmlsbD1cIm5vbmVcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+XG4gICAgICAgICAgICAgIDxjaXJjbGUgY2xhc3NOYW1lPVwib3BhY2l0eS0yNVwiIGN4PVwiMTJcIiBjeT1cIjEyXCIgcj1cIjEwXCIgc3Ryb2tlPVwiY3VycmVudENvbG9yXCIgc3Ryb2tlV2lkdGg9XCI0XCI+PC9jaXJjbGU+XG4gICAgICAgICAgICAgIDxwYXRoIGNsYXNzTmFtZT1cIm9wYWNpdHktNzVcIiBmaWxsPVwiY3VycmVudENvbG9yXCIgZD1cIk00IDEyYTggOCAwIDAxOC04VjBDNS4zNzMgMCAwIDUuMzczIDAgMTJoNHptMiA1LjI5MUE3Ljk2MiA3Ljk2MiAwIDAxNCAxMkgwYzAgMy4wNDIgMS4xMzUgNS44MjQgMyA3LjkzOGwzLTIuNjQ3elwiPjwvcGF0aD5cbiAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgUG9zdGluZyB0byBGYWNlYm9vay4uLlxuICAgICAgICAgIDwvPlxuICAgICAgICApIDogKFxuICAgICAgICAgIDw+XG4gICAgICAgICAgICA8c3ZnIGNsYXNzTmFtZT1cInctNCBoLTQgbXItMlwiIGZpbGw9XCJjdXJyZW50Q29sb3JcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+XG4gICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMjQgMTIuMDczYzAtNi42MjctNS4zNzMtMTItMTItMTJzLTEyIDUuMzczLTEyIDEyYzAgNS45OSA0LjM4OCAxMC45NTQgMTAuMTI1IDExLjg1NHYtOC4zODVINy4wNzh2LTMuNDdoMy4wNDdWOS40M2MwLTMuMDA3IDEuNzkyLTQuNjY5IDQuNTMzLTQuNjY5IDEuMzEyIDAgMi42ODYuMjM1IDIuNjg2LjIzNXYyLjk1M0gxNS44M2MtMS40OTEgMC0xLjk1Ni45MjUtMS45NTYgMS44NzR2Mi4yNWgzLjMyOGwtLjUzMiAzLjQ3aC0yLjc5NnY4LjM4NUMxOS42MTIgMjMuMDI3IDI0IDE4LjA2MiAyNCAxMi4wNzN6XCIvPlxuICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICBQb3N0IHRvIEZhY2Vib29rXG4gICAgICAgICAgPC8+XG4gICAgICAgICl9XG4gICAgICA8L2J1dHRvbj5cbiAgICA8L2Rpdj5cbiAgKTtcbn0iXSwibmFtZXMiOlsidXNlU3RhdGUiLCJmYWNlYm9va1NlcnZpY2UiLCJGYWNlYm9va1Bvc3RXaWRnZXQiLCJjb250ZW50Iiwic2V0Q29udGVudCIsInBvc3RpbmciLCJzZXRQb3N0aW5nIiwicmVzdWx0Iiwic2V0UmVzdWx0IiwicHVibGlzaFRvRmFjZWJvb2siLCJ0cmltIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwidG9rZW4iLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwicmVzcG9uc2UiLCJwdWJsaXNoUG9zdCIsInVuZGVmaW5lZCIsInN1Y2Nlc3MiLCJtZXNzYWdlIiwiZGl2IiwiY2xhc3NOYW1lIiwiaDMiLCJ0ZXh0YXJlYSIsInZhbHVlIiwib25DaGFuZ2UiLCJlIiwidGFyZ2V0IiwicGxhY2Vob2xkZXIiLCJyb3dzIiwiYnV0dG9uIiwib25DbGljayIsImRpc2FibGVkIiwic3ZnIiwieG1sbnMiLCJmaWxsIiwidmlld0JveCIsImNpcmNsZSIsImN4IiwiY3kiLCJyIiwic3Ryb2tlIiwic3Ryb2tlV2lkdGgiLCJwYXRoIiwiZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/FacebookPostWidget.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/services/facebookService.ts":
/*!*****************************************!*\
  !*** ./src/services/facebookService.ts ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   facebookService: function() { return /* binding */ facebookService; },\n/* harmony export */   getFacebookPages: function() { return /* binding */ getFacebookPages; },\n/* harmony export */   getFacebookProfile: function() { return /* binding */ getFacebookProfile; },\n/* harmony export */   getFacebookToken: function() { return /* binding */ getFacebookToken; },\n/* harmony export */   publishToFacebook: function() { return /* binding */ publishToFacebook; },\n/* harmony export */   testFacebookConnection: function() { return /* binding */ testFacebookConnection; }\n/* harmony export */ });\n/* harmony import */ var _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/supabaseClient */ \"(app-pages-browser)/./src/lib/supabaseClient.ts\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n// Facebook Integration Service\n// This service provides a unified interface for all Facebook operations\n\nclass FacebookService {\n    // Get Facebook access token from session or localStorage with better error handling\n    async getAccessToken(overrideToken) {\n        try {\n            console.log(\"=== GET ACCESS TOKEN START ===\");\n            // If an override token is provided (e.g., from server-side API), use it\n            if (overrideToken) {\n                console.log(\"Using override token, length:\", overrideToken.length);\n                // Validate the token before returning\n                const validation = await this.validateToken(overrideToken);\n                if (validation.valid) {\n                    console.log(\"Override token validated successfully\");\n                    return overrideToken;\n                } else {\n                    console.log(\"Override token is invalid:\", validation.error);\n                    throw new Error(\"Invalid override token: \".concat(validation.error));\n                }\n            }\n            // Try to get from localStorage first (most reliable for client-side)\n            if (true) {\n                const storedToken = localStorage.getItem(\"facebook_access_token\");\n                if (storedToken) {\n                    console.log(\"Token found in localStorage, length:\", storedToken.length);\n                    // Validate token before returning\n                    const validation = await this.validateToken(storedToken);\n                    if (validation.valid) {\n                        console.log(\"Token validated successfully\");\n                        if (validation.permissions) {\n                            console.log(\"Token permissions:\", validation.permissions);\n                        }\n                        return storedToken;\n                    } else {\n                        console.log(\"Stored token is invalid, removing it:\", validation.error);\n                        localStorage.removeItem(\"facebook_access_token\");\n                    }\n                }\n            }\n            // Get the current user's session\n            const { data: { session }, error: sessionError } = await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_0__.supabase.auth.getSession();\n            if (sessionError) {\n                console.error(\"Session error:\", sessionError);\n            // Don't throw error, try localStorage fallback\n            }\n            if (!session) {\n                console.log(\"No active Supabase session\");\n            } else {\n                console.log(\"Supabase session found\");\n                // Get the provider token (Facebook access token)\n                const facebookAccessToken = session.provider_token;\n                if (facebookAccessToken) {\n                    console.log(\"Token found in Supabase session, length:\", facebookAccessToken.length);\n                    // Validate the token before returning\n                    const validation = await this.validateToken(facebookAccessToken);\n                    if (validation.valid) {\n                        console.log(\"Session token validated successfully\");\n                        return facebookAccessToken;\n                    } else {\n                        console.log(\"Session token is invalid:\", validation.error);\n                    }\n                }\n            }\n            // Last resort: check localStorage again\n            if (true) {\n                const storedToken = localStorage.getItem(\"facebook_access_token\");\n                if (storedToken) {\n                    console.log(\"Emergency fallback: Token found in localStorage, length:\", storedToken.length);\n                    return storedToken;\n                }\n            }\n            console.log(\"No Facebook access token found anywhere\");\n            return null;\n        } catch (error) {\n            console.error(\"Error getting Facebook access token:\", error);\n            // Try absolute fallback\n            try {\n                if (true) {\n                    const storedToken = localStorage.getItem(\"facebook_access_token\");\n                    if (storedToken) {\n                        console.log(\"Absolute emergency fallback: Token found in localStorage, length:\", storedToken.length);\n                        return storedToken;\n                    }\n                }\n            } catch (fallbackError) {\n                console.error(\"Absolute fallback failed:\", fallbackError);\n            }\n            return null;\n        }\n    }\n    // Validate Facebook access token with detailed information\n    async validateToken(token) {\n        try {\n            // First, check basic token validity\n            const response = await fetch(\"\".concat(this.baseUrl, \"/me?access_token=\").concat(token, \"&fields=id,name,email\"));\n            if (!response.ok) {\n                var _errorData_error;\n                const errorData = await response.json();\n                return {\n                    valid: false,\n                    error: ((_errorData_error = errorData.error) === null || _errorData_error === void 0 ? void 0 : _errorData_error.message) || \"Token invalid\"\n                };\n            }\n            // If basic validation passes, check permissions\n            try {\n                // Check what permissions the token has\n                // Note: For debug_token, we need to use the app access token, but for simplicity,\n                // we'll skip this for now and just return valid\n                console.log(\"Token validation passed, skipping detailed permission check for now\");\n            } catch (debugError) {\n                console.log(\"Could not check token permissions:\", debugError);\n            // Still return valid since basic validation passed\n            }\n            return {\n                valid: true\n            };\n        } catch (error) {\n            console.error(\"Error validating Facebook token:\", error);\n            return {\n                valid: false,\n                error: error.message || \"Token validation failed\"\n            };\n        }\n    }\n    // Get user's Facebook pages with enhanced error handling and fallbacks\n    async getPages() {\n        try {\n            console.log(\"=== GET PAGES METHOD START ===\");\n            // Try to get token from session first\n            let token = null;\n            try {\n                token = await this.getAccessToken();\n                console.log(\"Token from getAccessToken():\", token ? \"Found\" : \"Not found\");\n            } catch (sessionError) {\n                console.log(\"Session token retrieval failed:\", sessionError.message);\n            }\n            // Fallback to direct localStorage access\n            if (!token) {\n                console.log(\"Trying direct localStorage access...\");\n                if (true) {\n                    const storedToken = localStorage.getItem(\"facebook_access_token\");\n                    if (storedToken) {\n                        token = storedToken;\n                        console.log(\"Token found directly in localStorage\");\n                    }\n                }\n            }\n            if (!token) {\n                throw new Error(\"No Facebook access token available from session or localStorage\");\n            }\n            console.log(\"Using token for pages request\");\n            // Validate token first\n            const validation = await this.validateToken(token);\n            console.log(\"Token validity check:\", validation);\n            if (!validation.valid) {\n                throw new Error(\"Facebook access token is invalid or expired: \".concat(validation.error));\n            }\n            // Check if token has required permissions\n            if (validation.permissions) {\n                const requiredPermissions = [\n                    \"pages_show_list\",\n                    \"pages_read_engagement\",\n                    \"pages_manage_posts\"\n                ];\n                const missingPermissions = requiredPermissions.filter((perm)=>!validation.permissions.includes(perm));\n                if (missingPermissions.length > 0) {\n                    console.log(\"Warning: Token missing required permissions:\", missingPermissions);\n                } else {\n                    console.log(\"Token has all required permissions\");\n                }\n            }\n            // Get user profile to confirm token works\n            try {\n                const userResponse = await fetch(\"\".concat(this.baseUrl, \"/me?access_token=\").concat(token, \"&fields=id,name,email\"));\n                const userData = await userResponse.json();\n                if (!userResponse.ok) {\n                    var _userData_error;\n                    console.error(\"User profile API error:\", userData);\n                    throw new Error(((_userData_error = userData.error) === null || _userData_error === void 0 ? void 0 : _userData_error.message) || \"Failed to fetch user profile\");\n                }\n                console.log(\"User profile retrieved:\", userData.name);\n            } catch (userError) {\n                console.error(\"Error fetching user profile:\", userError);\n            // Continue anyway as we might still get pages\n            }\n            // Get pages using the token\n            console.log(\"Fetching Facebook pages with token...\");\n            const response = await fetch(\"\".concat(this.baseUrl, \"/me/accounts?access_token=\").concat(token, \"&fields=name,id,category,picture,fan_count\"));\n            const data = await response.json();\n            console.log(\"Pages API response:\", data);\n            if (!response.ok) {\n                var _data_error;\n                console.error(\"Facebook pages API error:\", data);\n                throw new Error(((_data_error = data.error) === null || _data_error === void 0 ? void 0 : _data_error.message) || \"Failed to fetch Facebook pages\");\n            }\n            // Additional debugging - check if we have an empty data array\n            if (data && data.data && Array.isArray(data.data)) {\n                console.log(\"Pages retrieved successfully:\", data.data.length);\n                if (data.data.length === 0) {\n                    console.log(\"Warning: No pages found. This might be due to:\");\n                    console.log(\"1. User has no Facebook pages\");\n                    console.log(\"2. Token lacks pages_show_list permission\");\n                    console.log(\"3. User account is not a business account with page access\");\n                }\n                return data.data;\n            } else {\n                console.log(\"Unexpected response format:\", data);\n                return [];\n            }\n        } catch (error) {\n            console.error(\"Error fetching Facebook pages:\", error);\n            throw error;\n        }\n    }\n    // Get user's Facebook profile\n    async getProfile() {\n        try {\n            const token = await this.getAccessToken();\n            if (!token) {\n                throw new Error(\"No Facebook access token available\");\n            }\n            const response = await fetch(\"\".concat(this.baseUrl, \"/me?access_token=\").concat(token, \"&fields=id,name,email,picture\"));\n            const data = await response.json();\n            if (!response.ok) {\n                var _data_error;\n                throw new Error(((_data_error = data.error) === null || _data_error === void 0 ? void 0 : _data_error.message) || \"Failed to fetch Facebook profile\");\n            }\n            return data;\n        } catch (error) {\n            console.error(\"Error fetching Facebook profile:\", error);\n            throw error;\n        }\n    }\n    // Upload image to Facebook\n    async uploadImage(base64Image) {\n        let caption = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\", pageId = arguments.length > 2 ? arguments[2] : void 0, overrideToken = arguments.length > 3 ? arguments[3] : void 0;\n        try {\n            const token = await this.getAccessToken(overrideToken);\n            if (!token) {\n                throw new Error(\"No Facebook access token available. Please reconnect your Facebook account.\");\n            }\n            let accessTokenToUse = token;\n            let url = \"\".concat(this.baseUrl, \"/me/photos\");\n            // If a page ID is provided, get the page access token\n            if (pageId) {\n                console.log(\"Fetching page access token for page ID:\", pageId);\n                const pageTokenResponse = await fetch(\"\".concat(this.baseUrl, \"/\").concat(pageId, \"?fields=access_token&access_token=\").concat(token));\n                const pageTokenData = await pageTokenResponse.json();\n                if (!pageTokenResponse.ok) {\n                    var _pageTokenData_error;\n                    console.error(\"Error fetching page access token:\", pageTokenData);\n                    const errorMessage = ((_pageTokenData_error = pageTokenData.error) === null || _pageTokenData_error === void 0 ? void 0 : _pageTokenData_error.message) || \"Failed to get page access token\";\n                    throw new Error(\"Failed to get page access token: \".concat(errorMessage));\n                }\n                accessTokenToUse = pageTokenData.access_token;\n                url = \"\".concat(this.baseUrl, \"/\").concat(pageId, \"/photos\");\n                console.log(\"Using page access token for image upload\");\n            } else {\n                console.log(\"Using user access token for image upload to personal feed\");\n            }\n            // For Facebook photo upload, we need to send as form data\n            // First, convert base64 to buffer for server-side usage\n            const imageBuffer = Buffer.from(base64Image, \"base64\");\n            const formData = new FormData();\n            formData.append(\"source\", new Blob([\n                imageBuffer\n            ], {\n                type: \"image/png\"\n            }));\n            if (caption) {\n                formData.append(\"caption\", caption);\n            }\n            formData.append(\"access_token\", accessTokenToUse);\n            console.log(\"Uploading image to Facebook:\", {\n                url,\n                hasCaption: !!caption\n            });\n            // Upload to Facebook\n            const response = await fetch(url, {\n                method: \"POST\",\n                body: formData\n            });\n            const responseData = await response.json();\n            if (!response.ok) {\n                let errorMessage = \"Failed to upload image to Facebook\";\n                if (responseData && responseData.error) {\n                    errorMessage = responseData.error.message || responseData.error.type || errorMessage;\n                    // Log additional error details for debugging\n                    console.error(\"Facebook API error details:\", {\n                        type: responseData.error.type,\n                        code: responseData.error.code,\n                        fbtrace_id: responseData.error.fbtrace_id,\n                        message: responseData.error.message\n                    });\n                }\n                throw new Error(\"Facebook API error: \".concat(errorMessage));\n            }\n            console.log(\"Image uploaded to Facebook successfully:\", responseData);\n            return {\n                success: true,\n                data: responseData,\n                facebook_post_id: responseData.post_id\n            };\n        } catch (error) {\n            console.error(\"Error uploading image to Facebook:\", error);\n            // Re-throw with more user-friendly message\n            if (error instanceof Error) {\n                throw new Error(\"Image upload failed: \".concat(error.message));\n            }\n            throw new Error(\"Image upload failed: Unknown error occurred\");\n        }\n    }\n    // Publish post to Facebook (user feed or page)\n    async publishPost(content, pageId, overrideToken) {\n        try {\n            const token = await this.getAccessToken(overrideToken);\n            if (!token) {\n                throw new Error(\"No Facebook access token available. Please reconnect your Facebook account.\");\n            }\n            // Validate the token before attempting to publish\n            const validation = await this.validateToken(token);\n            if (!validation.valid) {\n                throw new Error(\"Facebook access token is invalid: \".concat(validation.error || \"Unknown error\", \". Please reconnect your Facebook account.\"));\n            }\n            let accessTokenToUse = token;\n            let url = \"\".concat(this.baseUrl, \"/me/feed\");\n            // If a page ID is provided, get the page access token\n            if (pageId) {\n                console.log(\"Fetching page access token for page ID:\", pageId);\n                const pageTokenResponse = await fetch(\"\".concat(this.baseUrl, \"/\").concat(pageId, \"?fields=access_token&access_token=\").concat(token));\n                const pageTokenData = await pageTokenResponse.json();\n                if (!pageTokenResponse.ok) {\n                    var _pageTokenData_error;\n                    console.error(\"Error fetching page access token:\", pageTokenData);\n                    const errorMessage = ((_pageTokenData_error = pageTokenData.error) === null || _pageTokenData_error === void 0 ? void 0 : _pageTokenData_error.message) || \"Failed to get page access token\";\n                    throw new Error(\"Failed to get page access token: \".concat(errorMessage));\n                }\n                accessTokenToUse = pageTokenData.access_token;\n                url = \"\".concat(this.baseUrl, \"/\").concat(pageId, \"/feed\");\n                console.log(\"Using page access token for publishing\");\n            } else {\n                console.log(\"Using user access token for publishing to personal feed\");\n            }\n            // Prepare the post data\n            const postData = {\n                message: content,\n                access_token: accessTokenToUse\n            };\n            console.log(\"Publishing to Facebook:\", {\n                url,\n                hasMessage: !!postData.message\n            });\n            // Publish to Facebook\n            const response = await fetch(url, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(postData)\n            });\n            const responseData = await response.json();\n            if (!response.ok) {\n                let errorMessage = \"Failed to publish to Facebook\";\n                if (responseData && responseData.error) {\n                    errorMessage = responseData.error.message || responseData.error.type || errorMessage;\n                    // Log additional error details for debugging\n                    console.error(\"Facebook API error details:\", {\n                        type: responseData.error.type,\n                        code: responseData.error.code,\n                        fbtrace_id: responseData.error.fbtrace_id,\n                        message: responseData.error.message\n                    });\n                }\n                throw new Error(\"Facebook API error: \".concat(errorMessage));\n            }\n            console.log(\"Post published to Facebook successfully:\", responseData);\n            return {\n                success: true,\n                data: responseData,\n                facebook_post_id: responseData.id\n            };\n        } catch (error) {\n            console.error(\"Error publishing to Facebook:\", error);\n            // Re-throw with more user-friendly message\n            if (error instanceof Error) {\n                throw new Error(\"Publish failed: \".concat(error.message));\n            }\n            throw new Error(\"Publish failed: Unknown error occurred\");\n        }\n    }\n    // Test Facebook connection\n    async testConnection() {\n        try {\n            const token = await this.getAccessToken();\n            if (!token) {\n                return {\n                    connected: false\n                };\n            }\n            // Validate token\n            const validation = await this.validateToken(token);\n            if (!validation.valid) {\n                return {\n                    connected: false\n                };\n            }\n            // Get user profile\n            const profile = await this.getProfile();\n            // Get pages\n            const pages = await this.getPages();\n            return {\n                connected: true,\n                user: profile,\n                pages: pages,\n                tokenInfo: validation\n            };\n        } catch (error) {\n            console.error(\"Error testing Facebook connection:\", error);\n            return {\n                connected: false\n            };\n        }\n    }\n    constructor(){\n        this.baseUrl = \"https://graph.facebook.com/v19.0\";\n    }\n}\n// Export singleton instance\nconst facebookService = new FacebookService();\n// Export individual functions for direct use\nconst getFacebookToken = ()=>facebookService.getAccessToken();\nconst getFacebookPages = ()=>facebookService.getPages();\nconst getFacebookProfile = ()=>facebookService.getProfile();\nconst publishToFacebook = (content, pageId)=>facebookService.publishPost(content, pageId);\nconst testFacebookConnection = ()=>facebookService.testConnection();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/facebookService.ts\n"));

/***/ })

}]);